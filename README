v1.0
               ___|          |                             _)
             \___ \   |   |  __ \   __ `__ \    _` |   __|  |  __ \    _ \
                   |  |   |  |   |  |   |   |  (   |  |     |  |   |   __/
             _____/  \__,_| _.__/  _|  _|  _| \__,_| _|    _| _|  _| \___|

Submarine is simply an aggregator for common subdomain enumeration techniques.  In the spirit of automating the more tedious work, this script will automatically perform several techniques and aggregate all discovered subdomains into a master list, organized by target domain.  Note that none of the techniques are my own, this script just pulls them together for tracking/analysis.

    Techniques Implemented So Far:
     - enumall.sh (jhaddix) / recon-ng (LaNMaSteR53)
     - subbrute.py (TheRook)
     - VirusTotal API Call
     - SSL Certificate Inspection for Alt. Names (thx to â€Ž@bbuerhaus for help with this)

This script is best run on a recurring basis to discover changes to the master list.  Recommended implementation is a cronjob that will automatically e-mail you or otherwise log when a new subdomain shows up.

INSTALLATION:
*** NOTE: Submarine is Python 3 only ***
 - Cryptography Dependencies: sudo apt-get install build-essential libssl-dev libffi-dev python-dev
 - Libraries: pip install -r requirements.txt
 - Key File:  In order for the Virus Total API call to work, a virus_total.key file needs to exist in the same directory as submarine.py.  Insert, on one line, the API key for your account.

Usage: submarine.py [-h] [-t TARGET] [-e] [-s] [-c] [-v] [-a]

optional arguments:
  -h, --help            show this help message and exit
  -t TARGET, --target TARGET
                        The target domain
  -e                    Perform enumall.sh enumeration via recon-ng
  -s                    Perform SubBrute.py enumeration
  -c                    Perform SSL Certificate Alt. name enumeration
  -v                    Perform VirusTotal API Enumeration
  -a                    Perform ALL checks.
  
  Usage Example:
        python3 submarine.py -t yahoo.com -a

Each target will have its data stored in a directory by that domain's name.  These directories are
created as sub-directories to wherever this script lives.  A master list of subdomains is maintained
in a file called "[target]_master.txt" within that directory, along with other working files.

    Directory Structure:
    submarine.py
        |__ yahoo.com
                |___ yahoo.com_master.txt
                |___ workingfile
                |___ workingfile
        |__ google.com
                |___ google.com_master.txt
                |___ workingfile
                |___ workingfile


Near-term To Do:
- Check subbrute.py results against the wordlist I used - sometimes it returns ALL valid, whih is B.S.  Check for that and abort if it happens


Setup Note:
If Google search starts coughing up Captchas, which is problematic for submarine, comment out the Google_web search in enumall.sh and just do the google_api search modules instead.
